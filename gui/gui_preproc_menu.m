function varargout = gui_preproc_menu(varargin)
% GUI_PREPROC_MENU M-file for gui_preproc_menu.fig
%      GUI_PREPROC_MENU, by itself, creates a new GUI_PREPROC_MENU or raises the existing
%      singleton*.
%
%      H = GUI_PREPROC_MENU returns the handle to a new GUI_PREPROC_MENU or the handle to
%      the existing singleton*.
%
%      GUI_PREPROC_MENU('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in GUI_PREPROC_MENU.M with the given input arguments.
%
%      GUI_PREPROC_MENU('Property','Value',...) creates a new GUI_PREPROC_MENU or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before gui_preproc_menu_OpeningFunction gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to gui_preproc_menu_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help gui_preproc_menu

% Last Modified by GUIDE v2.5 29-Aug-2007 18:59:55

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @gui_preproc_menu_OpeningFcn, ...
                   'gui_OutputFcn',  @gui_preproc_menu_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

% --- Executes just before gui_preproc_menu is made visible.
function gui_preproc_menu_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to gui_preproc_menu (see VARARGIN)

% default output, when no modification has been done
handles.output = false;

handles.preproc = varargin{3};

set(handles.edit1,'String',num2str(handles.preproc.smooth));
set(handles.popupmenu1,'Value',2-handles.preproc.lp_filter);

if handles.preproc.moco_yn
    set(handles.popupmenu_moco,'Value',handles.preproc.moco_yn);
    set(handles.edit_refvol,'String',handles.preproc.moco_ref);
    set(handles.popupmenu_refvol,'Value',2-strcmp(handles.preproc.moco_ref,'first'));
    set(handles.popupmenu_mocodel,'Value',2-handles.preproc.moco_del);
    set(handles.text8,'Enable','on',...
        'TooltipString','In some cases you may not need files generated by the Moco, e.g. to save disk space.(after Mcflirt, they will be deleted; after SPM Realign, they will not be created at all)');
    set(handles.popupmenu_mocodel,'Enable','on',...
        'TooltipString','Switches presence of Moco files after analyzis on or off');
else
    set(handles.popupmenu_moco,'Value',3);
    set(handles.text7,'Enable','off',...
        'TooltipString','Not available');
    set(handles.popupmenu_refvol,'Enable','off',...
        'TooltipString','Not available');
    set(handles.edit_refvol,'Enable','off',...
        'TooltipString','Not available','String','Not available');
    set(handles.text8,'Enable','off',...
        'TooltipString','Not available');
    set(handles.popupmenu_mocodel,'Enable','off',...
        'TooltipString','Not available');
end

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes gui_preproc_menu wait for user response (see UIRESUME)
uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = gui_preproc_menu_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if isfield(handles,'preproc') && isstruct(handles.preproc)
    varargout{1}.OK = true;
    varargout{1}.out = handles.preproc;
    delete(handles.figure1);
else
    varargout{1}.OK = false;
end


% Moco selection
% --- Executes on selection change in popupmenu_moco.
function popupmenu_moco_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu_moco (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = get(hObject,'String') returns popupmenu_moco contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu_moco
if get(hObject,'Value') ~= 3 %~strcmp(handles.moco_yn,'None')
    handles.preproc.moco_yn = get(hObject,'Value');
    set(handles.text7,'Enable','on','TooltipString',...
        'Reference volume for Moco. Either first volume in series or full path to reference.');
    set(handles.popupmenu_refvol,'Enable','on','TooltipString',...
        'Select ''first'' for first volume in series or ''full path'' to specify reference image');
    set(handles.edit_refvol,'Enable','on','TooltipString',...
        'Type ''first'' for first volume or full path to reference image');
    set(handles.edit_refvol,'String',handles.preproc.moco_ref);
    set(handles.text8,'Enable','on',...
        'TooltipString','In some cases you may not need files generated by the Moco, e.g. to save disk space.(after Mcflirt, they will be deleted; after SPM Realign, they will not be created at all)');
    set(handles.popupmenu_mocodel,'Enable','on',...
        'TooltipString','Switches presence of Moco files after analyzis on or off');
else
    handles.preproc.moco_yn = 0;
    set(handles.text7,'Enable','off',...
        'TooltipString','Not available');
    set(handles.popupmenu_refvol,'Enable','off',...
        'TooltipString','Not available');
    set(handles.edit_refvol,'Enable','off',...
        'TooltipString','Not available','String','Not available');
    set(handles.text8,'Enable','off',...
       'TooltipString','Not available');
   set(handles.popupmenu_mocodel,'Enable','off',...
       'TooltipString','Not available');
end
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function popupmenu_moco_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu_moco (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% Reference volume selection
% --- Executes on selection change in popupmenu_refvol.
function popupmenu_refvol_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu_refvol (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = get(hObject,'String') returns popupmenu_refvol contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu_refvol
if ~handles.preproc.moco_yn
    warndlg(sprintf('Switch on motion correction to use this feature'));
else 
    contents = get(hObject,'String');
    moco_ref = contents{get(hObject,'Value')};
    if strcmp(moco_ref,'full path')
        [FileName,PathName] = uigetfile('*.hdr','Please select a reference volume');
        if FileName
            moco_ref = fullfile(PathName,FileName);
        else
            warndlg(sprintf('No file was selected! No change has been done!'));
            moco_ref = get(handles.edit_refvol,'String');
            if strcmp(moco_ref,'first')
                set(hObject, 'Value', 1);
            end
        end
    end
    handles.preproc.moco_ref = moco_ref;
    set(handles.edit_refvol,'String',handles.preproc.moco_ref);
end
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function popupmenu_refvol_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu_refvol (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_refvol_Callback(hObject, eventdata, handles)
% hObject    handle to edit_refvol (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_refvol as text
%        str2double(get(hObject,'String')) returns contents of edit_refvol as a double
if ~handles.preproc.moco_yn
    warndlg('Switch on motion correction to use this feature');
else
    moco_ref = get(hObject,'String');
    if strcmp(moco_ref,'first')
        set(handles.popupmenu_refvol,'Value',1);
    else
        if exist(moco_ref,'file') && ~isempty(strfind(moco_ref,'.hdr'))
            set(handles.popupmenu_refvol,'Value',2);            
        else
            warndlg('Please select a valid Analyze header file! No change has been done!');
            moco_ref = handles.preproc.moco_ref;
            set(hObject, 'String', moco_ref);
        end
    end
    handles.preproc.moco_ref = moco_ref;
end
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit_refvol_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_refvol (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



% Motion corrected image deletion
% --- Executes on selection change in popupmenu_mocodel.
function popupmenu_mocodel_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu_mocodel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = get(hObject,'String') returns popupmenu_mocodel contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu_mocodel
if ~handles.preproc.moco_yn
    warndlg(sprintf('Switch on motion correction to use this feature'));
else
    contents = get(hObject,'String');
    handles.preproc.moco_del = strcmp(contents{get(hObject,'Value')},'No');    
end
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function popupmenu_mocodel_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu_mocodel (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

% Smoothing text
function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double
handles.preproc.smooth = str2double(get(hObject,'String'));
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% Low-pass filter selection
% --- Executes on selection change in popupmenu1.
function popupmenu1_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = get(hObject,'String') returns popupmenu1 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu1
contents = get(hObject,'String');
handles.preproc.lp_filter = strcmp(contents{get(hObject,'Value')},'Yes');
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function popupmenu1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

% close gui and return to gui_main_menu
% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
uiresume(handles.figure1);